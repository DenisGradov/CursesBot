import telebot, sqlite3,urllib.parse,re,random
from telebot import types
from config import * 
from datetime import date

curs=[0,0,0,0]

connect=sqlite3.connect('db.db')
cursor=connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    tg_id id,
    check_curs INTEGER,
    ban TEXT
)""")
connect.commit()
cursor.execute("""CREATE TABLE IF NOT EXISTS curs(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    link TEXT,
    download TEXT,
    pas_state TEXT,
    pas TEXT
)""")
connect.commit()
cursor.execute("""CREATE TABLE IF NOT EXISTS stats(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    checkToday INTEGER,
    checkAll INTEGER,
    nowDay TEXT
)""")
connect.commit()


connect=sqlite3.connect('db.db')
cursor=connect.cursor()
cursor.execute(f"SELECT id FROM stats")
data=cursor.fetchone()

if data is None:
    connect  = sqlite3.connect('db.db')
    cursor = connect.cursor()
    cursor.execute('INSERT INTO stats (checkToday, checkAll, nowDay) VALUES (?, ?, ?)', (0,0,date.today()))
    connect.commit() 

bot=telebot.TeleBot(token)

@bot.message_handler()
def ms(message):
    
    connect=sqlite3.connect('db.db')
    cursor=connect.cursor()
    cursor.execute(f"SELECT ban FROM users WHERE tg_id=?", (message.chat.id,))
    ban=cursor.fetchone()
    connect.commit()
    if ban is None:
            x = bot.get_chat_member(channel, message.chat.id)
            if x.status == "member" or x.status == "creator" or x.status == "administrator":
                user_menu(message)
            else:
                klava=types.InlineKeyboardMarkup(row_width=1)
                btn1=types.InlineKeyboardButton(text='üìö –ö–∞–Ω–∞–ª', url=channelLink)
                btn2=types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ', callback_data='check')
                klava.add(btn1,btn2)
                bot.send_message(message.chat.id, 'üòÖ–ü—Ä–∏–≤–µ—Ç!\n–Ø —Å–æ–∑–¥–∞–ª –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–µ–º—É - —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä. –í–∑–∞–º–µ–Ω —è –ª–∏—à—å –ø—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª.\n–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Å—è, –≤ –Ω–µ–º –Ω–µ—Ç –Ω–∏ —Å–ø–∞–º–∞, –Ω–∏ —Ä–µ–∫–ª–∞–º—ã. –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —è –ø—É–±–ª–∏–∫—É—é —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã.\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –∞ –ø–æ—Å–ª–µ –Ω–∞–∂–º–∏ –Ω–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"', reply_markup=klava, parse_mode='Markdown')
    else:
        ban=ban[0]
        if ban=='0':
            x = bot.get_chat_member(channel, message.chat.id)
            if x.status == "member" or x.status == "creator" or x.status == "administrator":
                user_menu(message)
            else:
                klava=types.InlineKeyboardMarkup(row_width=1)
                btn1=types.InlineKeyboardButton(text='üìö –ö–∞–Ω–∞–ª', url=channelLink)
                btn2=types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ', callback_data='check')
                klava.add(btn1,btn2)
                bot.send_message(message.chat.id, 'üòÖ–ü—Ä–∏–≤–µ—Ç!\n–Ø —Å–æ–∑–¥–∞–ª –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–µ–º—É - —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä. –í–∑–∞–º–µ–Ω —è –ª–∏—à—å –ø—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª.\n–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Å—è, –≤ –Ω–µ–º –Ω–µ—Ç –Ω–∏ —Å–ø–∞–º–∞, –Ω–∏ —Ä–µ–∫–ª–∞–º—ã. –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —è –ø—É–±–ª–∏–∫—É—é —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã.\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –∞ –ø–æ—Å–ª–µ –Ω–∞–∂–º–∏ –Ω–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"', reply_markup=klava, parse_mode='Markdown')

@bot.callback_query_handler(func= lambda callback: callback.data)
def ms(call):
    if call.data=='check':
        x = bot.get_chat_member(channel, call.message.chat.id)
        if x.status == "member" or x.status == "creator" or x.status == "administrator":
            message=call.message
            bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEGs2ljjmUphqqhjOWhjWm092qCQAfDjQAChwIAAladvQpC7XQrQFfQkCsE')
            bot.send_message(message.chat.id,'/start')
            user_menu(message)
        else:
            klava=types.InlineKeyboardMarkup(row_width=1)
            btn1=types.InlineKeyboardButton(text='üìö –ö–∞–Ω–∞–ª', url=channelLink)
            btn2=types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ', callback_data='check')
            klava.add(btn1,btn2)
            bot.send_message(call.message.chat.id, 'üòÖ–ü—Ä–∏–≤–µ—Ç!\n–Ø —Å–æ–∑–¥–∞–ª –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–µ–º—É - —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä. –í–∑–∞–º–µ–Ω —è –ª–∏—à—å –ø—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª.\n–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Å—è, –≤ –Ω–µ–º –Ω–µ—Ç –Ω–∏ —Å–ø–∞–º–∞, –Ω–∏ —Ä–µ–∫–ª–∞–º—ã. –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —è –ø—É–±–ª–∏–∫—É—é —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã.\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –∞ –ø–æ—Å–ª–µ –Ω–∞–∂–º–∏ –Ω–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"', reply_markup=klava, parse_mode='Markdown')


def user_menu(message):
    connect=sqlite3.connect('db.db')
    cursor=connect.cursor()
    cursor.execute(f"SELECT tg_id FROM users WHERE tg_id={message.chat.id}")
    data=cursor.fetchone()

    if data is None:
        connect  = sqlite3.connect('db.db')
        cursor = connect.cursor()
        cursor.execute('INSERT INTO users (name, tg_id, ban, check_curs) VALUES (?, ?, ?, ?)', (message.from_user.first_name, message.chat.id, 0, 0))
        connect.commit() 
        bot.send_message(logs,f'–ù–æ–≤—ã–π —é–∑–µ—Ä –≤ –±–æ—Ç–µ - @{message.from_user.first_name} ({message.chat.id})')
    elif message.text=='‚ûï–î–æ–±–∞–≤–∏—Ç—å' and message.chat.id==admin:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        step1=bot.send_message(message.chat.id,'1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å',reply_markup=klava)
        bot.register_next_step_handler(step1,step1_def)
    elif message.text=='üî•–°–∫–∞—á–∞—Ç—å –∫—É—Ä—Å':
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('üé≤–†–∞–Ω–¥–æ–º—ã–π –∫—É—Ä—Å','‚óÄÔ∏è–ù–∞–∑–∞–¥')
        down1=bot.send_message(message.chat.id,'–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å:\n(–ù–µ –∑–Ω–∞–µ—à—å –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å? –°–º–æ—Ç—Ä–∏ –∏–Ω—Ñ–æ)',reply_markup=klava)
        bot.register_next_step_handler(down1,down1_def)
    elif message.text=='‚ÑπÔ∏è–ò–Ω—Ñ–æ':
        connect=sqlite3.connect('db.db')
        cursor=connect.cursor()
        cursor.execute(f"SELECT check_curs FROM users WHERE tg_id={message.chat.id}")
        curssee=cursor.fetchone()
        connect.commit()
        
        connect  = sqlite3.connect('db.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT COUNT (id) FROM curs')
        connect.commit()
        
        cursall=cursor.fetchall()[0][0]

        connect  = sqlite3.connect('db.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT COUNT (id) FROM users')
        connect.commit()
        usersAll=cursor.fetchall()[0][0]

        connect  = sqlite3.connect('db.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT checkToday FROM stats')
        connect.commit()
        checkToday=cursor.fetchall()[0][0]

        connect  = sqlite3.connect('db.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT checkAll FROM stats')
        connect.commit()
        checkAll=cursor.fetchall()[0][0]

        klava=types.InlineKeyboardMarkup(row_width=1)
        btn1=types.InlineKeyboardButton(text='üìö–¢–µ–º–∞ –Ω–∞ –ª–æ–ª–∑–µ',url=lolz) 
        btn2=types.InlineKeyboardButton(text='üíø–ö–∞–∫ –Ω–∞–π—Ç–∏ –∫—É—Ä—Å?',url=howFindCurs) 
        btn3=types.InlineKeyboardButton(text='üßîüèø‚Äç‚ôÇÔ∏è–ê–≤—Ç–æ—Ä –±–æ—Ç–∞',url=autor) 
        klava.add(btn1,btn2,btn3)
        text=f'{message.from_user.first_name} (`{message.chat.id}`)\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ `{curssee[0]}` –∫—É—Ä—Å–æ–≤.\n\n–Æ–∑–µ—Ä–æ–≤ –≤ –±–æ—Ç–µ: `{usersAll}`\n–ö—É—Ä—Å–æ–≤ –≤ –±–æ—Ç–µ: `{cursall}`\n–ü–æ–ª—É—á–µ–Ω–æ –∫—É—Ä—Å–æ–≤: `{checkAll}`\n–ü–æ–ª—É—á–µ–Ω–æ –∫—É—Ä—Å–æ–≤ —Å–µ–≥–æ–¥–Ω—è: `{checkToday}`'
        bot.send_message(message.chat.id, text,parse_mode='Markdown', reply_markup=klava)
    elif message.text=='‚ùå–ë–∞–Ω' and message.chat.id==admin:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        ban=bot.send_message(message.chat.id,'üÜî –ö–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–±–∞–Ω–∏—Ç—å(—Ä–∞–∑–±–∞–Ω–∏—Ç—å)?',reply_markup=klava)
        bot.register_next_step_handler(ban,ban_def)
    elif message.text=='üì≠–†–∞—Å—Å—ã–ª–∫–∞' and message.chat.id==admin:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        ads=bot.send_message(message.chat.id,'‚úèÔ∏è –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —á—Ç–æ –±—ã —É —Ä–∞—Å—Å—ã–ª–∫–∏ –±—ã–ª–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è - –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –¥–æ–±–∞–≤–∏–≤ –∫ –Ω–µ–π —Ç–µ–∫—Å—Ç (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)',reply_markup=klava)
        bot.register_next_step_handler(ads,ads_f)
    else:
        klava=types.ReplyKeyboardMarkup(row_width=3,resize_keyboard=True)
        klava.add('üî•–°–∫–∞—á–∞—Ç—å –∫—É—Ä—Å','‚ÑπÔ∏è–ò–Ω—Ñ–æ')
        if message.chat.id==admin:
            klava.add('‚ûï–î–æ–±–∞–≤–∏—Ç—å','üì≠–†–∞—Å—Å—ã–ª–∫–∞','‚ùå–ë–∞–Ω')
        bot.send_message(message.chat.id,'–ú–µ–Ω—é:',reply_markup=klava)


photo_status=''
photo_id=''
description=''

def ads_f(message):
    global photo_status
    global photo_id
    global description
    if message.content_type!='photo' and message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        ads=bot.send_message(message.chat.id,'‚úèÔ∏è –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —á—Ç–æ –±—ã —É —Ä–∞—Å—Å—ã–ª–∫–∏ –±—ã–ª–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è - –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –¥–æ–±–∞–≤–∏–≤ –∫ –Ω–µ–π —Ç–µ–∫—Å—Ç (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)',reply_markup=klava)
        bot.register_next_step_handler(ads,ads_f)

    elif message.text=='‚óÄÔ∏è–ù–∞–∑–∞–¥':
        user_menu(message)
    elif message.content_type=='photo':
        bot.send_photo(message.chat.id, message.photo[0].file_id, message.caption)
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1='‚úÖ –°–æ–∑–¥–∞–µ–º'
        button2='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è'
        klava.add(button1,button2)
        photo_status=1
        description=message.caption
        photo_id=message.photo[0].file_id
        ads_y=bot.send_message(message.chat.id,'–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å—Ç–∞—Ä—Ç —Ä–µ–∫–ª–∞–º—ã', reply_markup=klava)
        bot.register_next_step_handler(ads_y,ads_yf)
    else:
        bot.send_message(message.chat.id, message.text)
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1='‚úÖ –°–æ–∑–¥–∞–µ–º'
        button2='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è'
        klava.add(button1,button2)
        photo_status=0
        description=message.text
        ads_y=bot.send_message(message.chat.id,'–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å—Ç–∞—Ä—Ç —Ä–µ–∫–ª–∞–º—ã', reply_markup=klava)
        bot.register_next_step_handler(ads_y,ads_yf)

def ads_yf(message):
    if message.text is None:
        user_menu(message)
    elif message.text=='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è':
        user_menu(message)
    else:

        global photo_status
        global photo_id
        global description

        connect  = sqlite3.connect('db.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT id FROM users ORDER BY id DESC LIMIT 1')
        connect.commit()
        i=1
        i2=int((cursor.fetchall())[0][0])
        try_false=0
        try_true=0
        for i in range(i2+1):
            connect  = sqlite3.connect('db.db')
            cursor = connect.cursor()
            cursor.execute(f'SELECT tg_id FROM users WHERE id = ?', (i,))
            connect.commit()
            if photo_status==1:
                try_true=try_true+1
                try:
                    bot.send_photo(cursor.fetchall()[0][0],photo_id,description)
                except Exception as error:
                    try_false=try_false+1

            else:
                try_true=try_true+1
                try:
                    bot.send_message(cursor.fetchall()[0][0],description)
                except Exception as error:
                    try_false=try_false+1
        
        text=f'üì≠ –†–∞—Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ `{try_true-1}` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!\n‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: `{try_true-try_false}`\n‚ùå –ù–µ –¥–æ—à–ª–æ: `{try_false-1}`'
        bot.send_message(message.chat.id, text, parse_mode='Markdown')
        user_menu(message)


def ban_def(message):
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('üé≤–†–∞–Ω–¥–æ–º—ã–π –∫—É—Ä—Å','‚óÄÔ∏è–ù–∞–∑–∞–¥')
        ban=bot.send_message(message.chat.id,'üÜî –ö–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–±–∞–Ω–∏—Ç—å(—Ä–∞–∑–±–∞–Ω–∏—Ç—å)?',reply_markup=klava)
        bot.register_next_step_handler(ban,ban_def)
    elif message.text=='‚óÄÔ∏è–ù–∞–∑–∞–¥':
        user_menu(message)
    else:
        connect=sqlite3.connect('db.db')
        cursor=connect.cursor()
        cursor.execute(f"SELECT ban FROM users WHERE tg_id=?", (message.text,))
        ban=cursor.fetchone()
        connect.commit()

        if ban is None:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
            ban=bot.send_message(message.chat.id,'üÜî –ö–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–±–∞–Ω–∏—Ç—å(—Ä–∞–∑–±–∞–Ω–∏—Ç—å)?',reply_markup=klava)
            bot.register_next_step_handler(ban,ban_def)
        else:
            
            connect=sqlite3.connect('db.db')
            cursor=connect.cursor()
            cursor.execute(f"SELECT name FROM users WHERE tg_id={message.text}")
            name=cursor.fetchone()[0]
            connect.commit()
            ban=ban[0]
            print(ban)
            if ban=='0':
                ban=1
                ms='–∑–∞–±–∞–Ω–µ–Ω'
            else:
                ban=0
                ms='—Ä–∞–∑–±–∞–Ω–µ–Ω'
            connect  = sqlite3.connect('db.db')
            cursor = connect.cursor()
            cursor.execute('UPDATE users SET ban = (?) WHERE tg_id = (?)', (ban,message.text, )) 
            connect.commit()
            bot.send_message(message.chat.id,f'{name} –±—ã–ª —É—Å–ø–µ—à–Ω–æ {ms}!')
            user_menu(message)

def down1_def(message):
    try:
        msOld=''
        if message.text is None:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('üé≤–†–∞–Ω–¥–æ–º—ã–π –∫—É—Ä—Å','‚óÄÔ∏è–ù–∞–∑–∞–¥')
            down1=bot.send_message(message.chat.id,'–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å:\n(–ù–µ –∑–Ω–∞–µ—à—å –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å? –°–º–æ—Ç—Ä–∏ –∏–Ω—Ñ–æ)',reply_markup=klava)
            bot.register_next_step_handler(down1,down1_def)
        elif message.text=='‚óÄÔ∏è–ù–∞–∑–∞–¥':
            user_menu(message)
        else:
            if message.text=='üé≤–†–∞–Ω–¥–æ–º—ã–π –∫—É—Ä—Å':
                connect  = sqlite3.connect('db.db')
                cursor = connect.cursor()
                cursor.execute(f'SELECT COUNT (id) FROM curs')
                x=random.randint(1, int(cursor.fetchone()[0]))
                connect.commit()
                
                connect=sqlite3.connect('db.db')
                cursor=connect.cursor()
                cursor.execute(f"SELECT link FROM curs WHERE id=?", (x,))
                link=cursor.fetchone()
                if link is None:
                    bot.send_message(message.chat.id,'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
                else:
                    msOld=message.text
                    message.text=link[0]
                
            connect=sqlite3.connect('db.db')
            cursor=connect.cursor()
            cursor.execute(f"SELECT download FROM curs WHERE link=?", (message.text,))
            data=cursor.fetchone()
            cursor.execute(f"SELECT download FROM curs WHERE name=?", (message.text,))
            data2=cursor.fetchone()
            cursor.execute(f"SELECT pas_state FROM curs WHERE name=?", (message.text,))
            pas_state=cursor.fetchone()
            if pas_state is None:
                cursor.execute(f"SELECT pas_state FROM curs WHERE link=?", (message.text,))
                pas_state=cursor.fetchone()
            if pas_state is None:
                passw=''
            else:
                pas_state=pas_state[0]
                if pas_state=='True':
                    cursor.execute(f"SELECT pas FROM curs WHERE name=?", (message.text,))
                    pas=cursor.fetchone()[0]
                    passw=f'\n\n–ü–∞—Ä–æ–ª—å: {pas}'
                else:
                    passw=''

            print(data)
            if data is None and data2 is None:
                print(data2)
                klava=types.InlineKeyboardMarkup(row_width=1)
                btn1=types.InlineKeyboardButton(text='–ü–æ–ø—Ä–æ—Å–∏—Ç—å –∫—É—Ä—Å‚öí',url=lolz)
                klava.add(btn1)
                bot.send_message(message.chat.id,'–î–∞–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –°–∫–∏–Ω—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å –≤ —Ç–µ–º—É –ª–æ–ª–∑–∞',reply_markup=klava)
            else:
                if data is None:
                    link=data2[0]
                else:
                    link=data[0]
                if msOld!='':
                    try:
                        klava=types.InlineKeyboardMarkup(row_width=1)
                        btn1=types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ü•á',url=lolz)
                        btn2=types.InlineKeyboardButton(text='–°–∫–∞—á–∞—Ç—å –∫—É—Ä—Åüî•',url=link)
                        btn0=types.InlineKeyboardButton(text='–ò—Å—Ç–æ—á–Ω–∏–∫ –∫—É—Ä—Å–∞üîó',url=message.text)
                        klava.add(btn2,btn1,btn0)
                        bot.send_message(message.chat.id,f'–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞!\n–í–µ–∂–ª–∏–≤—ã–º —Ç–æ–Ω–æ–º –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–º–µ –ª–æ–ª–∑–∞ "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å" –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ :){passw}',reply_markup=klava)
                    except:
                        klava=types.InlineKeyboardMarkup(row_width=1)
                        btn1=types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ü•á',url=lolz)
                        btn0=types.InlineKeyboardButton(text='–ò—Å—Ç–æ—á–Ω–∏–∫ –∫—É—Ä—Å–∞üîó',url=message.text)
                        klava.add(btn1,btn0)
                        bot.send_message(message.chat.id,f'–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞!\n–í–µ–∂–ª–∏–≤—ã–º —Ç–æ–Ω–æ–º –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–º–µ –ª–æ–ª–∑–∞ "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å" –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ :){passw}',reply_markup=klava)
                        if len(link) > 4096:
                            for x in range(0, len(link), 4096):
                                bot.send_message(message.chat.id, link[x:x+4096])
                        else:
                            bot.send_message(message.chat.id, link)
                else:
                   
                    
                    try:
                        klava=types.InlineKeyboardMarkup(row_width=1)
                        btn1=types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ü•á',url=lolz)
                        btn2=types.InlineKeyboardButton(text='–°–∫–∞—á–∞—Ç—å –∫—É—Ä—Åüî•',url=link)
                        klava.add(btn2,btn1)
                        bot.send_message(message.chat.id,f'–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞!\n–í–µ–∂–ª–∏–≤—ã–º —Ç–æ–Ω–æ–º –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–º–µ –ª–æ–ª–∑–∞ "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å" –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ :){passw}',reply_markup=klava)

                    except:
                        klava=types.InlineKeyboardMarkup(row_width=1)
                        btn1=types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ü•á',url=lolz)
                        klava.add(btn1)
                        bot.send_message(message.chat.id,f'–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞!\n–í–µ–∂–ª–∏–≤—ã–º —Ç–æ–Ω–æ–º –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–º–µ –ª–æ–ª–∑–∞ "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å" –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ :){passw}',reply_markup=klava)
                        if len(link) > 4096:
                            for x in range(0, len(link), 4096):
                                bot.send_message(message.chat.id, link[x:x+4096])
                        else:
                            bot.send_message(message.chat.id, link)

                user_menu(message)
                connect=sqlite3.connect('db.db')
                cursor=connect.cursor()
                cursor.execute(f"SELECT check_curs FROM users WHERE tg_id={message.chat.id}")
                curssee=cursor.fetchone()
                connect.commit()
                x=curssee[0]+1
                
                bot.send_message(logs,f'@{message.from_user.username} | {message.chat.id} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –∫—É—Ä—Å (–∑–∞ –≤—Å–µ –≤—Ä–µ–º—è —É–∂–µ {x} –∫—É—Ä—Å–æ–≤')
                
                connect  = sqlite3.connect('db.db')
                cursor = connect.cursor()
                cursor.execute('UPDATE users SET check_curs = (?) WHERE tg_id = (?)', (x,message.chat.id, )) 
                connect.commit()
            
                connect=sqlite3.connect('db.db')
                cursor=connect.cursor()
                cursor.execute(f"SELECT checkAll FROM stats")
                curssee=cursor.fetchone()
                connect.commit()
                x=curssee[0]+1
                connect  = sqlite3.connect('db.db')
                cursor = connect.cursor()
                cursor.execute('UPDATE stats SET checkAll = (?)', (x,)) 
                connect.commit()

                tod=date.today()
                
                connect=sqlite3.connect('db.db')
                cursor=connect.cursor()
                cursor.execute(f"SELECT nowDay FROM stats")
                curssee=cursor.fetchone()
                connect.commit()
                if str(tod)==str(curssee[0]):
                    connect  = sqlite3.connect('db.db')
                    cursor = connect.cursor()
                    cursor.execute(f"SELECT checkToday FROM stats")
                    connect.commit()
                    x=cursor.fetchone()[0]+1
                else:
                    connect  = sqlite3.connect('db.db')
                    cursor = connect.cursor()
                    cursor.execute('UPDATE stats SET nowDay = (?) ', (tod, )) 
                    connect.commit()
                    x=1
                connect  = sqlite3.connect('db.db')
                cursor = connect.cursor()
                cursor.execute('UPDATE stats SET checkToday = (?) ', (x, )) 
                connect.commit()
    except:
        bot.send_message(message.chat.id,'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')


        user_menu(message)


def step1_def(message):
    global curs
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        step1=bot.send_message(message.chat.id,'1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å',reply_markup=klava)
        bot.register_next_step_handler(step1,step1_def)
    elif message.text=='‚óÄÔ∏è–ù–∞–∑–∞–¥':
        message.text=='/start'
        user_menu(message)
    else:
        curs[0]=message.text
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        step2=bot.send_message(message.chat.id,'2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ',reply_markup=klava)
        bot.register_next_step_handler(step2,step2_def)

def step2_def(message):
    global curs
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        step2=bot.send_message(message.chat.id,'2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ',reply_markup=klava)
        bot.register_next_step_handler(step2,step2_def)
    elif message.text=='‚óÄÔ∏è–ù–∞–∑–∞–¥':
        message.text=='/start'
        user_menu(message)
    else:
        curs[1]=message.text
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚ùå–ü–∞—Ä–æ–ª—è –Ω–µ—Ç')
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        step3=bot.send_message(message.chat.id,'3Ô∏è‚É£ –ï—Å–ª–∏ —É –∫—É—Ä—Å–∞ –µ—Å—Ç—å –ø–∞—Ä–æ–ª—å - –≤–≤–µ–¥–∏ –µ–≥–æ. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É',reply_markup=klava)
        bot.register_next_step_handler(step3,step3_def)

def step3_def(message):
    global curs
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚ùå–ü–∞—Ä–æ–ª—è –Ω–µ—Ç')
        klava.add('‚óÄÔ∏è–ù–∞–∑–∞–¥')
        step3=bot.send_message(message.chat.id,'3Ô∏è‚É£ –ï—Å–ª–∏ —É –∫—É—Ä—Å–∞ –µ—Å—Ç—å –ø–∞—Ä–æ–ª—å - –≤–≤–µ–¥–∏ –µ–≥–æ. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É',reply_markup=klava)
        bot.register_next_step_handler(step3,step3_def)
    elif message.text=='‚óÄÔ∏è–ù–∞–∑–∞–¥':
        message.text=='/start'
        user_menu(message)
    elif message.text=='‚ùå–ü–∞—Ä–æ–ª—è –Ω–µ—Ç':
        curs[2]='-'
        curs[3]='False'
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º')
        step4=bot.send_message(message.chat.id,f'4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n\n*–ö—É—Ä—Å:* {curs[0]}\n*–°–∫–∞—á–∞—Ç—å:* {curs[1]}\n*–ü–∞—Ä–æ–ª—å:* -',reply_markup=klava)
        bot.register_next_step_handler(step4,step4_def)
    else:
        curs[2]=message.text
        curs[3]='True'
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º')
        step4=bot.send_message(message.chat.id,f'4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n\n*–ö—É—Ä—Å:* {curs[0]}\n*–°–∫–∞—á–∞—Ç—å:* {curs[1]}\n*–ü–∞—Ä–æ–ª—å:* `{message.text}`',reply_markup=klava)
        bot.register_next_step_handler(step4,step4_def)


def step4_def(message):
    global curs
    if message.text is None:
        if curs[2]=='-':
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º')
            step4=bot.send_message(message.chat.id,f'4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n\n*–ö—É—Ä—Å:* {curs[0]}\n*–°–∫–∞—á–∞—Ç—å:* {curs[1]}\n*–ü–∞—Ä–æ–ª—å:* -',reply_markup=klava, parse_mode='Markdown')
            bot.register_next_step_handler(step4,step4_def)
        else:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º')
            step4=bot.send_message(message.chat.id,f'4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n\n*–ö—É—Ä—Å:* {curs[0]}\n*–°–∫–∞—á–∞—Ç—å:* {curs[1]}\n*–ü–∞—Ä–æ–ª—å:* `{curs[2]}`',reply_markup=klava, parse_mode='Markdown')
            bot.register_next_step_handler(step4,step4_def)
    elif message.text=='‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º':
        message.text=='/start'
        user_menu(message)
    elif message.text=='‚úÖ–°–æ–∑–¥–∞–µ–º':
        if needs_decoding(curs[0]):
            name= curs[0]
            link = urllib.parse.unquote(curs[0])
        else:
            name= urllib.parse.quote((curs[0]), safe=':/*().')
            link = (curs[0])
        
        connect=sqlite3.connect('db.db')
        cursor=connect.cursor()
        cursor.execute(f"SELECT download FROM curs WHERE link=?", (link,))
        data=cursor.fetchone()
        cursor.execute(f"SELECT download FROM curs WHERE name=?", (name,))
        data2=cursor.fetchone()

        if data is None and data2 is None:
            connect  = sqlite3.connect('db.db')
            cursor = connect.cursor()
            cursor.execute('INSERT INTO curs (name,link, download, pas_state, pas) VALUES (?, ?, ?, ?,?)', (name,link, curs[1], curs[3], curs[2]))
            connect.commit()
            bot.send_message(message.chat.id,'–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
        else:
            bot.send_message(message.chat.id,'–ö—É—Ä—Å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ!')
        message.text=='/start'
        user_menu(message)

    else:
        if curs[2]=='-':
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º')
            step4=bot.send_message(message.chat.id,f'4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n\n*–ö—É—Ä—Å:* {curs[0]}\n*–°–∫–∞—á–∞—Ç—å:* {curs[1]}\n*–ü–∞—Ä–æ–ª—å:* -',reply_markup=klava)
            bot.register_next_step_handler(step4,step4_def)
        else:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–ù–µ —Å–æ–∑–¥–∞–µ–º')
            step4=bot.send_message(message.chat.id,f'4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n\n*–ö—É—Ä—Å:* {curs[0]}\n*–°–∫–∞—á–∞—Ç—å:* {curs[1]}\n*–ü–∞—Ä–æ–ª—å:* `{curs[2]}`',reply_markup=klava)
            bot.register_next_step_handler(step4,step4_def)


def needs_decoding(url):
    return bool(re.search(r'%[0-9A-Fa-f]{2}', url))

bot.polling()

